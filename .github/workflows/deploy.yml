name: Deploy to Aliyun

on:
  push:
    branches: ["master"] # 当推送到 main 分支时触发
  workflow_dispatch: # 允许手动触发

env:
  IMAGE_NAME: react-docker # 替换为你的应用名称

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }} # Docker Hub 访问令牌

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to Aliyun Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          script: |
            # 登录到 Docker Hub
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_TOKEN }}

            # 拉取最新镜像
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

            # 检查并停止所有使用 80 端口的容器
            for container in $(docker ps -q); do
              if docker port $container | grep -q "80/tcp"; then
                echo "Stopping container using port 80: $container"
                docker stop $container
                docker rm $container
              fi
            done

            # 停止并删除旧容器（如果存在）
            docker stop ${{ env.IMAGE_NAME }} || true
            docker rm ${{ env.IMAGE_NAME }} || true

            # 运行新容器（如果 80 端口仍被占用，使用其他端口）
            if ! docker run -d \
              --name ${{ env.IMAGE_NAME }} \
              -p 8080:80 \
              --restart always \
              ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest; then
              
              echo "Port 80 is still in use, trying port 8080..."
              docker run -d \
                --name ${{ env.IMAGE_NAME }} \
                -p 8080:80 \
                --restart always \
                ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            fi
